[build-system]
requires = ["setuptools", "wheel"]
# uncomment to enable pep517 after versioneer problem is fixed.
# https://github.com/python-versioneer/python-versioneer/issues/193
# build-backend = "setuptools.build_meta"

[tool.black]
extend_excludes = '''(docs/.*|tests/.*.fixture|.*.ge_store_backend_id)'''

[tool.isort]
profile = "black"
skip_gitignore = true
extend_skip_glob = ['venv/*', 'docs/*']

[tool.mypy]
files = [
    "great_expectations",
    # "contrib" # ignore entire `contrib` package
    ]
warn_unused_configs = true
ignore_missing_imports = true
# TODO: change this to 'normal' once we have 'full' type coverage
follow_imports = 'silent'
warn_redundant_casts = true
show_error_codes = true
exclude = [
    # If pattern should always be excluded add comment explaining why
    '_version\.py',  # generated by `versioneer`
    'v012',  # legacy code
    # #################################################################################
    # TODO: complete typing for the following modules and remove from exclude list
    # number is the current number of typing errors for the excluded pattern
    'checkpoint/actions\.py',  # 18
    'checkpoint/checkpoint\.py',  # 26
    'checkpoint/configurator\.py', # 2
    'checkpoint/types',  # 34
    'checkpoint/util\.py',  # 5
    'cli/batch_request\.py',  # 11
    'cli/checkpoint\.py',  # 9
    'cli/cli\.py',  # 10
    'cli/datasource\.py',  # 12
    'cli/docs\.py',  # 1
    'cli/project\.py',  # 5
    'cli/python_subprocess\.py', # 6
    'cli/store\.py',  # 2
    'cli/suite\.py',  # 24
    'cli/toolkit\.py',  # 27
    'cli/upgrade_helpers/upgrade_helper_v11\.py',  # 59
    'cli/upgrade_helpers/upgrade_helper_v13\.py',  # 17
    'cli/util\.py',  # 1
    'core/batch\.py', # 29
    'core/expectation_configuration\.py', # 21
    'core/expectation_diagnostics', # 20
    'core/expectation_validation_result\.py', # 9
    'dataset/sparkdf_dataset\.py', # 3
    'dataset/sqlalchemy_dataset\.py', # 16
    'datasource/data_connector/configured_asset_sql_data_connector\.py',  # 47
    'execution_engine/execution_engine\.py',  # 7
    'execution_engine/pandas_execution_engine\.py',  # 9
    'execution_engine/sparkdf_execution_engine\.py',  # 8
    'execution_engine/split_and_sample/data_sampler\.py',  # 1
    'execution_engine/split_and_sample/data_splitter\.py',  # 6
    'execution_engine/split_and_sample/pandas_data_sampler\.py',  # 16
    'execution_engine/split_and_sample/pandas_data_splitter\.py',  # 2
    'execution_engine/split_and_sample/sparkdf_data_sampler\.py',  # 11
    'execution_engine/split_and_sample/sparkdf_data_splitter\.py',  # 4
    'execution_engine/split_and_sample/sqlalchemy_data_sampler\.py',  # 10
    'execution_engine/split_and_sample/sqlalchemy_data_splitter\.py',  # 22
    'execution_engine/sqlalchemy_batch_data\.py',  # 1
    'execution_engine/sqlalchemy_dialect.py',  # 1
    'execution_engine/sqlalchemy_execution_engine\.py',  # 8
    'expectations/core',  # 257
    'expectations/expectation\.py',  # 59
    'expectations/metrics',  # 130
    'expectations/regex_based_column_map_expectation\.py',  # 3
    'expectations/registry\.py',  # 19
    'expectations/row_conditions\.py',  # 4
    'expectations/set_based_column_map_expectation\.py',  # 3
    'expectations/validation_handlers\.py', # 1
    'render/renderer/checkpoint_new_notebook_renderer\.py',  # 9
    'render/renderer/column_section_renderer\.py',  # 1
    'render/renderer/content_block/bullet_list_content_block\.py',  # 1
    'render/renderer/content_block/content_block\.py',  # 5
    'render/renderer/content_block/exception_list_content_block\.py',  # 4
    'render/renderer/content_block/validation_results_table_content_block\.py',  # 2
    'render/renderer/datasource_new_notebook_renderer\.py',  #  4
    'render/renderer/inline_renderer\.py',  # 3
    'render/renderer/notebook_renderer\.py',  # 2
    'render/renderer/page_renderer\.py',  # 10
    'render/renderer/profiling_results_overview_section_renderer\.py',  # 2
    'render/renderer/site_builder\.py',  # 3
    'render/renderer/slack_renderer\.py',  # 9
    'render/renderer/suite_edit_notebook_renderer\.py',  # 7
    'render/renderer/suite_scaffold_notebook_renderer\.py',  # 7
    'render/renderer/v3/suite_edit_notebook_renderer\.py',  # 11
    'render/renderer/v3/suite_profile_notebook_renderer\.py',  # 4
    'render/types',  # 4
    'render/util\.py',  # 2
    'render/view',  # 11
    'rule_based_profiler/attributed_resolved_metrics\.py',  # 4
    'rule_based_profiler/builder\.py',  # 4
    'rule_based_profiler/config/base\.py',  # 13
    'rule_based_profiler/data_assistant_result/data_assistant_result\.py',  # 71
    'rule_based_profiler/data_assistant_result/onboarding_data_assistant_result\.py', # 1
    'rule_based_profiler/data_assistant_result/plot_components\.py', # 12
    'rule_based_profiler/data_assistant/data_assistant_dispatcher\.py',  # 3
    'rule_based_profiler/data_assistant/data_assistant_runner\.py',  # 10
    'rule_based_profiler/data_assistant/data_assistant\.py',  # 15
    'rule_based_profiler/domain_builder/categorical_column_domain_builder\.py',  # 18
    'rule_based_profiler/domain_builder/column_domain_builder\.py',
    'rule_based_profiler/domain_builder/column_pair_domain_builder\.py',  # 4
    'rule_based_profiler/domain_builder/domain_builder\.py',  # 5
    'rule_based_profiler/domain_builder/map_metric_column_domain_builder\.py',  # 8
    'rule_based_profiler/domain_builder/multi_column_domain_builder\.py',  # 4
    'rule_based_profiler/domain_builder/table_domain_builder\.py',  # 1
    'rule_based_profiler/domain\.py', # 4
    'rule_based_profiler/estimators/bootstrap_numeric_range_estimator\.py',  # 8
    'rule_based_profiler/estimators/exact_numeric_range_estimator\.py',  # 3
    'rule_based_profiler/estimators/kde_numeric_range_estimator\.py',  # 7
    'rule_based_profiler/estimators/numeric_range_estimator\.py',  # 1
    'rule_based_profiler/estimators/quantiles_numeric_range_estimator\.py',  # 5
    'rule_based_profiler/expectation_configuration_builder',  # 13
    'rule_based_profiler/helpers/cardinality_checker\.py',  # 9
    'rule_based_profiler/helpers/simple_semantic_type_filter\.py',  # 7
    'rule_based_profiler/helpers/util\.py',  # 53
    'rule_based_profiler/parameter_builder/histogram_single_batch_parameter_builder\.py',  # 7
    'rule_based_profiler/parameter_builder/mean_table_columns_set_match_multi_batch_parameter_builder\.py',  # 2
    'rule_based_profiler/parameter_builder/mean_unexpected_map_metric_multi_batch_parameter_builder\.py',  # 19
    'rule_based_profiler/parameter_builder/metric_multi_batch_parameter_builder\.py',  # 15
    'rule_based_profiler/parameter_builder/metric_single_batch_parameter_builder\.py',  # 3
    'rule_based_profiler/parameter_builder/numeric_metric_range_multi_batch_parameter_builder\.py',  # 27
    'rule_based_profiler/parameter_builder/parameter_builder\.py',  # 40
    'rule_based_profiler/parameter_builder/partition_parameter_builder\.py',  # 9
    'rule_based_profiler/parameter_builder/regex_pattern_string_parameter_builder\.py',  # 21
    'rule_based_profiler/parameter_builder/simple_date_format_string_parameter_builder\.py',  # 20
    'rule_based_profiler/parameter_builder/value_counts_single_batch_parameter_builder\.py',  # 3
    'rule_based_profiler/parameter_builder/value_set_multi_batch_parameter_builder\.py',  # 2
    'rule_based_profiler/parameter_container\.py',  # 7
    'rule_based_profiler/rule_based_profiler_result\.py',  # 1
    'rule_based_profiler/rule_based_profiler\.py',  # 40
    'rule_based_profiler/rule_state\.py',  # 5
    'rule_based_profiler/rule/rule.py',  # 5
    'validation_operators/types/validation_operator_result\.py', # 35
    'validation_operators/validation_operators\.py',  # 16
    'validator/exception_info\.py', # 1
    'validator/validation_graph\.py',  # 2
    'validator/validator\.py', # 54
]

[tool.pytest.ini_options]
filterwarnings = [
    # This warning is common during testing where we intentionally use a COMPLETE format even in cases that would
    # be potentially overly resource intensive in standard operation
    "ignore:Setting result format to COMPLETE for a SqlAlchemyDataset:UserWarning",
    # This deprecation warning was fixed in moto release 1.3.15, and the filter should be removed once we migrate
    # to that minimum version
    "ignore:Using or importing the ABCs:DeprecationWarning:moto.cloudformation.parsing",
    # This deprecation warning comes from getsentry/responses, a mocking utility for requests. It is a dependency in moto.
    "ignore:stream argument is deprecated. Use stream parameter in request directly:DeprecationWarning",
]
junit_family="xunit2"
markers = [
    "base_data_context: mark test as being relevant to BaseDataContext, which will be removed during refactor",
    "cloud: mark test as being relevant to Great Expectations Cloud.",
    "docs: mark a test as a docs test.",
    "e2e: mark test as an E2E test.",
    "external_sqldialect: mark test as requiring install of an external sql dialect.",
    "integration: mark test as an integration test.",
    "slow: mark tests taking longer than 1 second.",
    "unit: mark a test as a unit test.",
    "v2_api: mark test as specific to the v2 api (e.g. pre Data Connectors)",
]
testpaths = "tests"
# use `pytest-mock` drop-in replacement for `unittest.mock`
# https://pytest-mock.readthedocs.io/en/latest/configuration.html#use-standalone-mock-package
mock_use_standalone_module = false
